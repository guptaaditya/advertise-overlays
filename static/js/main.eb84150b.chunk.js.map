{"version":3,"sources":["utils/helper.js","blocks/box/index.js","blocks/button/index.js","blocks/centercontainer/index.js","blocks/form/index.js","blocks/formField/index.js","blocks/input/index.js","blocks/view/index.js","blocks/appbody/index.js","blocks/sidebar/sidebar.js","blocks/sidebar/index.js","blocks/table/index.js","blocks/steps/index.js","blocks/index.js","components/centercontainercard/index.js","utils/ui.js","components/loginforms/login.js","components/loginforms/signup.js","components/loginforms/forgotpassword.js","components/loginforms/verification.js","components/loginforms/resetpassword.js","modules/login/signin/login.js","modules/login/actiontypes.js","modules/login/actions.js","modules/login/signin/index.js","modules/login/signup/signup.js","modules/login/signup/index.js","modules/login/forgotpassword/forgotpassword.js","modules/login/forgotpassword/index.js","modules/login/verification/verification.js","modules/login/verification/index.js","modules/login/resetpassword/resetpassword.js","modules/login/resetpassword/index.js","modules/dashboard/dashboard.js","components/sidebar/sidebar.js","modules/mainbody/mainbody.js","modules/mainbody/index.js","modules/router/privateroute.js","modules/router/index.js","modules/router/routes.js","components/overlayslist/overlayslist.js","modules/overlays/overlays.js","modules/overlays/actiontypes.js","modules/overlays/index.js","modules/overlays/actions.js","components/createoverlays/index.js","modules/overlays/create/overlaycreate.js","modules/overlays/create/index.js","components/links/index.js","modules/links/links.js","modules/links/actiontypes.js","modules/links/index.js","modules/links/actions.js","modules/router/actiontypes.js","modules/router/reducer.js","modules/login/reducer.js","modules/overlays/reducer.js","modules/links/reducer.js","app/reducers.js","modules/login/saga.js","modules/router/actions.js","modules/overlays/saga.js","modules/links/saga.js","app/sagas.js","app/index.js","app/store.js","serviceWorker.js","index.js"],"names":["storage","window","localStorage","tokenKey","ComponentWrapper","Component","additionalProps","props","children","remainingProps","ComponentProps","Box","boxProps","Container","ButtonBlock","type","Checkbox","label","Button","ButtonGroup","groupProps","Group","ButtonOr","buttonOrProps","Or","CenterContainer","cols","Grid","columns","textAlign","style","height","verticalAlign","Column","width","FormBlock","formProps","Form","FormGroup","formGroupProps","FormFieldWrapper","Field","FormInput","Input","InputBlock","iconType","inputProps","icon","View","viewProps","AppBody","className","this","React","defaults","as","Menu","vertical","animation","inverted","visible","MenuItem","item","isImage","clickHandler","onClick","_","noop","Item","Image","centered","src","size","active","Icon","name","SidebarBlock","Sidebar","SidebarPushable","Pushable","Segment","SidebarPusher","Pusher","CollapsedSidebarMenu","Logo","logo","text","alt","MenuItems","menuItems","onItemClickToParents","map","index","key","e","state","collapsed","handleContractMenu","setState","preventDefault","stopPropagation","handleExpandMenu","handleOnMouseover","outTimer","clearTimeout","handleOnMouseout","setTimeout","getLastMenuItem","expand","collapse","onItemClick","topMenuItems","reject","bottomMenuItems","filter","length","fixed","id","onMouseOver","onMouseOut","TableCell","handleOnClick","column","row","value","align","icons","color","renderer","singleLine","body","link","renderedIcon","hrefField","target","href","tableCellProps","collapsing","Table","Cell","TableComponent","Header","Row","cellProps","HeaderCell","data","getFormattedData","noRecordsLabel","Body","rowIndex","colSpan","footerActions","Footer","fullWidth","dataRow","labelField","valueField","otherFields","view","stackable","getHeader","getBody","getFooter","defaultProps","Step","items","steps","SemanticIcon","Divider","SemanticDivider","SemanticHeader","CenterContainerCard","centerContainerProps","iziToast","require","ToastFactory","init","toastSettings","timeout","resetOnHover","position","close","closeOnEscape","transitionIn","transitionOut","getToast","settings","showToast","sanitizedType","toLowerCase","typeMethod","indexOf","toastInfo","title","message","Login","isRememberActive","handleRememberClick","prevState","onRemember","handleLoginClick","input","getUserInput","validateUserInput","onLogin","username","document","getElementById","password","trim","onSignupClick","onForgotPasswordClick","onSubmit","isLine","placeholder","toggle","primary","Signup","handleSignupClick","onSignup","form","forms","firstname","querySelector","lastname","confirmpassword","onSigninClick","widths","fluid","ForgotPassword","handleForgotPasswordClick","onForgotPassword","useremail","Verification","handleVerificationCodeSubmitClick","onSubmitVerificationCode","verificationCode","onResendVerificationCode","emailAddress","ResetPassword","handleResetPasswordClick","onResetPasswordClick","handleRemember","remember","handleLogin","userInput","redirectTo","URLSearchParams","location","search","get","handleSignup","signupPath","handleForgotPassword","forgotpasswordPath","withRouter","ON_LOGIN","ON_SIGNUP","ON_FORGOT_PASSWORD","ON_FORGOT_PASSWORD_SUCCESS","ON_VERIFICATION_CODE_SUBMIT","ON_RESEND_VERIFICATION_CODE","ON_RESET_PASSWORD","onForgotPasswordSuccess","actionTypes","connect","dispatch","redirectUrl","actions","handleSignin","signinPath","VerificationCode","handleVerificationCodeSubmit","code","onVerificationCodeSubmit","handleResendVerificationCode","userManagement","resetPasswordForUserEmail","handleResetPassword","onResetPassword","Dashboard","SidebarComponent","MainApp","handleMenuClick","route","match","bottom","loadedRouteComponent","find","startsWith","path","routeLabel","Mainbody","PrivateRoute","isAuthenticated","getIsAuthenticated","onRedirectToLogin","rest","auth","redirectBackTo","history","createHashHistory","url","push","Routes","exact","to","newOverlayPath","OverlaysList","handleOnAddOverlays","onAddOverlay","floated","labelPosition","getFooterActions","Overlays","onFetchOverlays","FETCH_OVERLAYS","ON_FETCH_OVERLAYS_SUCCESS","overlays","CreateOverlays","stepsConfig","description","disabled","CreateOverlay","stepsStatus","s","assign","getSteps","createOverlay","onSelection","property","LinksList","Links","onCopy","col","rowData","renderTargetUrl","onFetchLinks","FETCH_LINKS","ON_FETCH_LINKS_SUCCESS","links","ON_AUTHENTICATION_SUCCESS","initialState","token","overlayType","completed","overlayCategory","overlayTemplate","overlayName","combineReducers","actiontypes","action","Promise","resolve","put","redirectActions","console","log","userInputs","takeLatest","serverData","createdOn","result","shortUrl","targetUrl","sagaMiddleware","sagas","loginSagas","overlaysSagas","linksSagas","store","createStore","combinedReducers","getItem","loadStateToken","compose","applyMiddleware","createTaleMiddleware","subscribe","getState","setItem","saga","run","initStore","App","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb84150b.chunk.js","sourcesContent":["import React from 'react';\r\nconst storage = window.localStorage;\r\nconst tokenKey = 'utv.auth.hash';\r\n\r\nexport default function ComponentWrapper(Component, additionalProps = {}) {\r\n    return function(props) {\r\n        const { children, ...remainingProps } = props;\r\n        const ComponentProps = {\r\n            ...additionalProps,\r\n            ...remainingProps,\r\n        }\r\n        return (\r\n            <Component {...ComponentProps}>\r\n                {children}\r\n            </Component>\r\n        );\r\n    }\r\n}\r\n\r\nexport function loadStateToken() {\r\n    const token = storage.getItem(tokenKey);\r\n    if(token) {\r\n        return {\r\n            auth: {\r\n                isAuthenticated: true\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport function saveStateToken(state) {\r\n  storage.setItem(tokenKey, state.auth.token);\r\n}","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nexport function Box(props) {\r\n    const { children, ...boxProps } = props;\r\n    return (\r\n        <Container {...boxProps}>\r\n            {children}\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, Checkbox } from 'semantic-ui-react';\r\n\r\nexport function ButtonBlock(props) {\r\n    if (props.type === 'checkbox') {\r\n        return <Checkbox label={props.label} />\r\n    }\r\n    return (\r\n        <Button {...props}>\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport function ButtonGroup(props)  {\r\n    const { children, ...groupProps } = props;\r\n    return (\r\n        <Button.Group {...groupProps}>\r\n            {children}\r\n        </Button.Group>\r\n    );\r\n}\r\n\r\nexport function ButtonOr(props) {\r\n    const { children, ...buttonOrProps } = props;\r\n    return (\r\n        <Button.Or {...buttonOrProps}>\r\n            {children}\r\n        </Button.Or>\r\n    );\r\n}","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nexport function CenterContainer(props) {\r\n    const { cols = 6} = props;\r\n    return (\r\n        <Grid columns='equal' textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column width={cols}>\r\n                {props.children}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Form } from 'semantic-ui-react';\r\n\r\nexport function FormBlock(props) {\r\n    const { children, ...formProps } = props;\r\n    return (\r\n        <Form {...formProps}>\r\n            {children}\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport function FormGroup(props) {\r\n    const { children, ...formGroupProps } = props;\r\n    return (\r\n        <Form.Group {...formGroupProps}>\r\n            {children}\r\n        </Form.Group>\r\n    )\r\n}","import React from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\nimport ComponentWrapper from 'utils/helper';\r\n\r\nexport const FormFieldWrapper = ComponentWrapper(Form.Field);\r\n\r\nexport const FormInput = ComponentWrapper(Form.Input);","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nexport function InputBlock(props) {\r\n    const { iconType, ...inputProps } = props;\r\n    return (\r\n        <Input icon={props.iconType} {...inputProps} />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport function View(props) {\r\n    const { children, ...viewProps } = props;\r\n    return (\r\n        <div {...viewProps}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default class AppBody extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-body\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Sidebar, Segment, Menu, Icon, Image } from 'semantic-ui-react';\r\n\r\nimport ComponentWrapper from 'utils/helper';\r\n\r\nconst defaults = {\r\n    as: Menu,\r\n    vertical: true,\r\n    animation: 'overlay',\r\n    inverted: true,\r\n    visible: true,\r\n    width: 'thin',\r\n};\r\n\r\nfunction MenuItem(props) {\r\n    const { item, className = '' } = props;\r\n    const isImage = item.as === 'Image';\r\n    const clickHandler = item.onClick || _.noop;\r\n    if (isImage) {\r\n        return (\r\n            <Menu.Item className={className} onClick={clickHandler}>\r\n                <Image centered src={item.src} size='tiny' />\r\n            </Menu.Item>\r\n        );\r\n    }\r\n    return (\r\n        <Menu.Item className={className} active={item.active} onClick={clickHandler}>\r\n            {item.icon && <Icon name={item.icon} />}\r\n            {item.label}\r\n        </Menu.Item>\r\n    );\r\n}\r\n\r\n\r\nexport const SidebarBlock = ComponentWrapper(Sidebar, defaults);\r\nexport const SidebarPushable = ComponentWrapper(Sidebar.Pushable, { as: Segment });\r\nexport const SidebarPusher = ComponentWrapper(Sidebar.Pusher);\r\nexport class SidebarCombined extends React.Component {\r\n    render() {\r\n        const { visible: v, animation: a } = defaults;\r\n        const { \r\n            items, children, applicationContent, visible=v, animation=a,\r\n            onMenuClick, expanded\r\n        } = this.props;\r\n        const content = children || applicationContent;\r\n        const sidebarProps = {\r\n            visible,\r\n            animation,\r\n            onClick: onMenuClick\r\n        };\r\n        if (!expanded) {\r\n            return <CollapsedSidebarMenu {...sidebarProps} />\r\n        }\r\n        return (\r\n            <SidebarPushable>\r\n                <SidebarBlock {...sidebarProps}>\r\n                    {_.map(items, item => <MenuItem item={item} />)}\r\n                </SidebarBlock>\r\n                {content && (\r\n                    <SidebarPusher dimmed={visible}>\r\n                        <Segment basic>\r\n                            {content}\r\n                        </Segment>\r\n                    </SidebarPusher>\r\n                )}\r\n            </SidebarPushable>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CollapsedSidebarMenu(props) {\r\n    return (\r\n        <SidebarPushable>\r\n            <SidebarBlock { ...{...props, width: 'very thin' } }>\r\n                <MenuItem className='bottom-sidebar-menu-item' item={{ icon: 'arrow alternate circle right' }} />)}\r\n            </SidebarBlock>\r\n        </SidebarPushable>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Container, Icon, Image, Menu } from \"semantic-ui-react\";\r\n\r\nfunction Logo(props) {\r\n  const {\r\n    logo: { src, text = \"\", className = \"\", onClick = _.noop } = {}\r\n  } = props;\r\n  if (src) {\r\n    return (\r\n      <Image\r\n        alt={text}\r\n        size=\"mini\"\r\n        src={src}\r\n        className={className}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  } else if (text) {\r\n    return (\r\n      <div className={className} onClick={onClick}>\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction MenuItems(props) {\r\n  const { menuItems = [], onClick: onItemClickToParents } = props;\r\n  return (\r\n    <>\r\n      {_.map(\r\n        menuItems,\r\n        (item, index) => {\r\n          const { as = \"a\", icon = \"\", label = \"\", onClick = _.noop, active = false } = item;\r\n          if (icon || label) {\r\n            return (\r\n              <Menu.Item as={as} key={index} active={active} onClick={e => {onClick(); onItemClickToParents(item)}} >\r\n                {icon && <Icon name={icon} />}\r\n                <span>{label}</span>\r\n              </Menu.Item>\r\n            );\r\n          }\r\n          return null;\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default class Sidebar extends React.Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  handleContractMenu = e => {\r\n    this.setState({ collapsed: true });\r\n    e && e.preventDefault();\r\n    e && e.stopPropagation();\r\n  };\r\n\r\n  handleExpandMenu = e => {\r\n    this.setState({ collapsed: false });\r\n    e && e.preventDefault();\r\n    e && e.stopPropagation();\r\n  };\r\n\r\n  handleOnMouseover = e => {\r\n    if (this.outTimer) clearTimeout(this.outTimer);\r\n    this.handleExpandMenu(e);\r\n  };\r\n\r\n  handleOnMouseout = e => {\r\n    this.outTimer = setTimeout(this.handleContractMenu, 3000, e);\r\n  };\r\n\r\n  getLastMenuItem = () => {\r\n    const { collapsed } = this.state;\r\n    const expand = {\r\n      label: \"Expand\",\r\n      icon: \"expand\",\r\n      onClick: this.handleExpandMenu,\r\n    };\r\n    const collapse = {\r\n      label: \"Collapse\",\r\n      icon: \"compress\",\r\n      onClick: this.handleContractMenu,\r\n    };\r\n    return collapsed ? expand : collapse;\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const { logo, menuItems = [], onItemClick = _.noop } = this.props;\r\n    const topMenuItems = _.reject(menuItems, \"bottom\");\r\n    let bottomMenuItems = _.filter(menuItems, \"bottom\") || [];\r\n    bottomMenuItems = [...bottomMenuItems, this.getLastMenuItem()];\r\n\r\n    if (topMenuItems && topMenuItems.length) {\r\n      return (\r\n        <Menu\r\n          icon=\"labeled\"\r\n          fixed=\"left\"\r\n          inverted\r\n          vertical\r\n          id=\"leftNavigationBar\"\r\n          onMouseOver={this.handleOnMouseover}\r\n          onMouseOut={this.handleOnMouseout}\r\n          className={collapsed ? \"collapsed\" : \"\"}\r\n        >\r\n          <Container className=\"top\">\r\n            {logo && (\r\n              <Menu.Item as=\"a\" className=\"logo\">\r\n                <Logo logo={logo} />\r\n              </Menu.Item>\r\n            )}\r\n            <MenuItems menuItems={topMenuItems} onClick={onItemClick} />\r\n          </Container>\r\n\r\n          {bottomMenuItems && (\r\n            <Container>\r\n              <MenuItems menuItems={bottomMenuItems} onClick={onItemClick} />\r\n            </Container>\r\n          )}\r\n        </Menu>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { Table, Icon } from 'semantic-ui-react';\r\nimport 'styles/table.scss';\r\n\r\nclass TableCell extends React.Component {\r\n    handleOnClick = () => {\r\n        const { column: { row, value, onClick = _.noop } = {} } = this.props;\r\n        onClick(value, row);\r\n    }\r\n\r\n    render() {\r\n        const { column: { \r\n            width, align, value, icon, icons, label = null, color, renderer, row, \r\n            singleLine = false\r\n        } = {} } = this.props;\r\n        const className = icon ? 'pointer': '';\r\n        let body = null;\r\n        if(renderer) {\r\n            body = renderer(this.props.column, row);\r\n        } else {\r\n            body = (\r\n                <>\r\n                    <div className='text'>{label}</div>\r\n                    &nbsp; \r\n                    {icon && <Icon className='pointer' name={icon} color={color} />}\r\n                    {_.map(icons, ({ icon, color, onClick = _.noop, link }, key) => {\r\n                        const renderedIcon = (\r\n                            <Icon \r\n                                onClick={ e => onClick(value, row)} \r\n                                className='pointer' \r\n                                key={key} \r\n                                name={icon} \r\n                                color={color} \r\n                            />\r\n                        );\r\n                        if (link) {\r\n                            const { hrefField, target = '' } = link;\r\n                            return (\r\n                                <a href={row[hrefField]} target={target}>{renderedIcon}</a>\r\n                            )\r\n                        }\r\n                        return renderedIcon;\r\n                    })}\r\n                </>\r\n            );\r\n        }\r\n        const tableCellProps = {\r\n            textAlign: align,\r\n            singleLine,\r\n            collapsing: !singleLine,\r\n            className,\r\n            value,\r\n        };\r\n        if (width) tableCellProps.width = width;\r\n        return (\r\n            <Table.Cell onClick={this.handleOnClick} {...tableCellProps}>\r\n                {body}\r\n            </Table.Cell>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class TableComponent extends React.Component {\r\n    getHeader() {\r\n        const { cols = [] } = this.props;\r\n        \r\n        if (!cols.length) return null;\r\n\r\n        return (\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    {_.map(cols, (column, index) => {\r\n                        const {  width = null, align, label = null, singleLine = false } = column;\r\n                        const cellProps = {\r\n                            singleLine,\r\n                            collapsing: !singleLine\r\n                        }\r\n                        if (width) cellProps.width = width;\r\n                        return (\r\n                            <Table.HeaderCell key={index} {...cellProps} textAlign={align}>\r\n                                {label}\r\n                            </Table.HeaderCell>\r\n                        );\r\n                    })}\r\n                </Table.Row>\r\n            </Table.Header>\r\n        );\r\n    }\r\n\r\n    getBody() {\r\n        const data = this.getFormattedData();\r\n        const { noRecordsLabel, cols } = this.props;\r\n        if (!data.length) {\r\n            return (\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell textAlign='center' colSpan={cols.length}>\r\n                            {noRecordsLabel}\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            );\r\n        }\r\n        return (\r\n            <Table.Body>\r\n                {_.map(data, (row, rowIndex) => {\r\n                    return (\r\n                        <Table.Row  key={rowIndex}>\r\n                            {_.map(\r\n                                row, (column, index) => <TableCell column={column} key={index} />\r\n                            )}\r\n                        </Table.Row>\r\n                    )\r\n                })}\r\n            </Table.Body>\r\n        );\r\n    } \r\n\r\n    getFooter() {\r\n        const { footerActions = null, cols } = this.props;\r\n        if (!footerActions) return null;\r\n        return (\r\n            <Table.Footer fullWidth>\r\n                <Table.Row>\r\n                    <Table.HeaderCell colSpan={cols.length}>\r\n                        {footerActions}\r\n                    </Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Footer>\r\n        );\r\n    }\r\n\r\n    getFormattedData() {\r\n        const { data, cols } = this.props;\r\n        return data.map(dataRow => {\r\n            return cols.map(({ labelField, label, valueField, icon, ...otherFields }) => {\r\n                const view = {\r\n                    value: dataRow[valueField],\r\n                    row: dataRow,\r\n                    ...otherFields,\r\n                };\r\n                if (icon) {\r\n                    view.icon = icon;\r\n                } \r\n                if (labelField) {\r\n                    view.label = dataRow[labelField];\r\n                }\r\n                return view;\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table className='scrollable-table' stackable>\r\n                {this.getHeader()}\r\n                {this.getBody()}\r\n                {this.getFooter()}\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nTableComponent.propTypes = {\r\n    cols: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            align: PropTypes.string, \r\n            label: PropTypes.string,\r\n            icon: PropTypes.string,\r\n            color: PropTypes.string,\r\n            valueField: PropTypes.string, \r\n            labelField: PropTypes.string, \r\n        })\r\n    ),\r\n    data: PropTypes.array,\r\n    footerActions: PropTypes.any,\r\n    noRecordsLabel: PropTypes.string,\r\n}\r\nTableComponent.defaultProps = {\r\n    noRecordsLabel: 'No Records Found',\r\n\r\n}","import React from 'react';\r\nimport { Step } from 'semantic-ui-react'\r\n\r\nexport default (props) => <Step.Group stackable='tablet' items={props.steps} />","import { Icon as SemanticIcon, Divider as SemanticDivider, Header as SemanticHeader } from 'semantic-ui-react';\r\nimport ComponentWrapper from 'utils/helper';\r\n\r\nexport const Icon = ComponentWrapper(SemanticIcon);\r\nexport const Divider = ComponentWrapper(SemanticDivider);\r\nexport const Header = ComponentWrapper(SemanticHeader);\r\n\r\nexport { Box } from './box';\r\nexport { ButtonBlock as Button, ButtonGroup, ButtonOr } from './button';\r\nexport { CenterContainer } from './centercontainer';\r\nexport { FormBlock as Form, FormGroup } from './form';\r\nexport { FormFieldWrapper as FormField, FormInput } from './formField';\r\nexport { InputBlock as Input } from './input';\r\nexport { Paper } from './paper';\r\nexport { View } from './view';\r\nexport { default as AppBody } from './appbody';\r\nexport { \r\n    SidebarBlock, SidebarPushable, SidebarPusher \r\n} from './sidebar/sidebar';\r\nexport { default as Sidebar } from './sidebar';\r\nexport { default as Table } from './table';\r\nexport { default as Step } from './steps';","import React from 'react';\r\nimport { CenterContainer } from 'blocks';\r\n\r\nexport function CenterContainerCard(props) {\r\n    const { children, ...centerContainerProps } = props;\r\n    return (\r\n        <CenterContainer {...centerContainerProps}>\r\n            {children}\r\n        </CenterContainer>\r\n    )\r\n}","const iziToast = require('izitoast');\r\n\r\nconst ToastFactory = (function () {\r\n    let init = false;\r\n    const toastSettings = {\r\n        timeout: 3000,\r\n        resetOnHover: true,\r\n        position: 'topRight',\r\n        close: true,\r\n        closeOnEscape: true,\r\n        transitionIn: 'flipInX',\r\n        transitionOut: 'flipOutX',\r\n    };\r\n    return {\r\n        getToast: function () {\r\n            if (!init) {\r\n                iziToast.settings(toastSettings);\r\n                init = true;\r\n            }\r\n            return iziToast;\r\n        }\r\n    };\r\n})();\r\n\r\nexport function showToast(view, type = '', settings = {}) {\r\n    const allowedTypes = ['success', 'info', 'error', 'warning'];\r\n    //type could be success, info, error, warning\r\n    /*\r\n        When view is a string, its a message without title,\r\n        When view is a object with title and message property use it as it is.\r\n    */\r\n    const sanitizedType = type.toLowerCase();\r\n    const typeMethod = allowedTypes.indexOf(sanitizedType) > -1 ? sanitizedType : 'show';\r\n    const toastInfo = {\r\n        title: view.title || '',\r\n        message: view.message || view || '',\r\n        ...settings,\r\n    };\r\n    ToastFactory.getToast()[typeMethod](toastInfo);\r\n};\r\n\r\nexport const onLogin = (props) => {\r\n    showToast('Message', 'success');\r\n    props.history.push('/next-url');\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Login extends React.Component {\r\n    state = {\r\n        isRememberActive: false,\r\n    };\r\n\r\n    handleRememberClick = () => {\r\n        this.setState(prevState => ({ isRememberActive: !prevState.isRememberActive }), () => {\r\n            const { onRemember } = this.props;\r\n            onRemember(this.state.isRememberActive);\r\n        });\r\n    }\r\n\r\n    handleLoginClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onLogin(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const username = document.getElementById('username').value;\r\n        const password = document.getElementById('password').value;\r\n        return {\r\n            username,\r\n            password\r\n        };\r\n    }\r\n\r\n    validateUserInput({ username, password }) {\r\n        if (!username.trim()) {\r\n            showToast('Username cannot be empty', 'error');\r\n            return false;\r\n        } else if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { isRememberActive } = this.state;\r\n        const { onSignupClick, onForgotPasswordClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={5}>\r\n                    <Box className='border-box'>\r\n                        <Form onSubmit={this.handleLoginClick}>\r\n                            <FormField isLine>\r\n                                Welcome back!\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='username'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                    iconType='user' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine className='text flexible-center-equidistant-cells'>\r\n                                <Button toggle active={isRememberActive} \r\n                                    onClick={this.handleRememberClick}>\r\n                                    Remember me\r\n                                </Button> \r\n                                <FormField isLine onClick={onForgotPasswordClick}>\r\n                                    <View className='inline link'>Forgot password?</View>\r\n                                </FormField>\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button type='submit' className='cell no-margin' primary>\r\n                                    Login\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSignupClick}>\r\n                                Or <View className='inline link'>register now!</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nLogin.defaultProps = {\r\n    onRemember: _.noop,\r\n    onSignupClick: _.noop,\r\n    onForgotPasswordClick: _.noop,\r\n    onLogin: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View, FormInput, FormGroup } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Signup extends React.Component {\r\n    handleSignupClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onSignup(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const form = document.forms[0];\r\n        const firstname = form.querySelector('#firstName').value;\r\n        const lastname = form.querySelector('#lastName').value;\r\n        const username = form.querySelector('#username').value;\r\n        const confirmpassword = form.querySelector('#confirmpassword').value;\r\n        const password = form.querySelector('#password').value;\r\n        return {\r\n            username,\r\n            password,\r\n            confirmpassword,\r\n            firstname,\r\n            lastname\r\n        };\r\n    }\r\n\r\n    validateUserInput({ username, password, confirmpassword, firstname }) {\r\n        if (!firstname.trim()) {\r\n            showToast('Please enter your name', 'error');\r\n            return false;\r\n        } else if (!username.trim()) {\r\n            showToast('Username cannot be empty', 'error');\r\n            return false;\r\n        } else if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        } else if (!confirmpassword.trim()) {\r\n            showToast('Confirm password cannot be empty', 'error');\r\n            return false;\r\n        } else if (confirmpassword.trim() !== password.trim()) {\r\n            showToast('Password and Confirm password do not match', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Creating an account is quick and easy!\r\n                            </FormField>\r\n                            <FormGroup widths='equal'>\r\n                                <FormInput \r\n                                    id='firstName'\r\n                                    fluid \r\n                                    placeholder='First name' \r\n                                />\r\n                                <FormInput \r\n                                    id='lastName'\r\n                                    fluid \r\n                                    placeholder='Last name' \r\n                                />\r\n                            </FormGroup>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='username'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='confirmpassword'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Confirm Password\" \r\n                                />\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button className='cell' primary onClick={this.handleSignupClick}>\r\n                                    Register\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in.</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nSignup.defaultProps = {\r\n    onSignup: _.noop,\r\n    onSigninClick: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { showToast } from 'utils/ui';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, ButtonGroup, ButtonOr } from 'blocks';\r\n\r\nexport default class ForgotPassword extends React.Component {\r\n    handleForgotPasswordClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onForgotPassword(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const useremail = document.getElementById('useremail').value;\r\n        return {\r\n            useremail,\r\n        };\r\n    }\r\n\r\n    validateUserInput({ useremail }) {\r\n        if (!useremail.trim()) {\r\n            showToast('Please enter your Email', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter your registered email ID\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='useremail'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\" \r\n                                    iconType='user' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={onSigninClick}>To Sign in</Button>\r\n                                    <ButtonOr />\r\n                                    <Button primary onClick={this.handleForgotPasswordClick}>\r\n                                        Get Verification Code\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nForgotPassword.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, ButtonGroup, ButtonOr, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class Verification extends React.Component {\r\n    handleVerificationCodeSubmitClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onSubmitVerificationCode(input.verificationCode);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const verificationCode = document.getElementById('verificationCode').value;\r\n        return {\r\n            verificationCode,\r\n        };\r\n    }\r\n\r\n    validateUserInput({ verificationCode }) {\r\n        if (!verificationCode.trim()) {\r\n            showToast('Please enter the verification code', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onResendVerificationCode, emailAddress, onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={6}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter the verification code sent to <View className='inline link'>{emailAddress}</View>\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='verificationCode'\r\n                                    type=\"text\" \r\n                                    placeholder=\"Verification Code\" \r\n                                    iconType='user secret' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <ButtonGroup>\r\n                                    <Button onClick={onResendVerificationCode}>Resend</Button>\r\n                                    <ButtonOr />\r\n                                    <Button primary onClick={this.handleVerificationCodeSubmitClick}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in.</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nVerification.propTypes = {\r\n    emailAddress: PropTypes.string.isRequired,\r\n};\r\nVerification.defaultProps = {\r\n    onResendVerificationCode: _.noop,\r\n    onSubmitVerificationCode: _.noop,\r\n    onSigninClick: _.noop,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { CenterContainerCard } from 'components/centercontainercard';\r\nimport { Input, Form, FormField, Box, Button, View } from 'blocks';\r\nimport { showToast } from 'utils/ui';\r\n\r\nexport default class ResetPassword extends React.Component {\r\n    handleResetPasswordClick = () => {\r\n        const input = this.getUserInput();\r\n        if (this.validateUserInput(input)) {\r\n            this.props.onResetPasswordClick(input);\r\n        }\r\n    }\r\n\r\n    getUserInput() {\r\n        const confirmpassword = document.getElementById('confirmpassword').value;\r\n        const password = document.getElementById('password').value;\r\n        return {\r\n            confirmpassword,\r\n            password\r\n        };\r\n    }\r\n\r\n    validateUserInput({ confirmpassword, password }) {\r\n        if (!password.trim()) {\r\n            showToast('Password cannot be empty', 'error');\r\n            return false;\r\n        } else if (!confirmpassword.trim()) {\r\n            showToast('Confirm password cannot be empty', 'error');\r\n            return false;\r\n        } else if (confirmpassword.trim() !== password.trim()) {\r\n            showToast('Password and Confirm password do not match', 'error');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { onSigninClick } = this.props;\r\n        return (\r\n            <>\r\n                <CenterContainerCard cols={5}>\r\n                    <Box className='border-box'>\r\n                        <Form>\r\n                            <FormField isLine>\r\n                                Please enter the new password\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='password'\r\n                                    type=\"password\" \r\n                                    placeholder=\"New Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField isLine>\r\n                                <Input \r\n                                    id='confirmpassword'\r\n                                    type=\"password\" \r\n                                    placeholder=\"Confirm New Password\" \r\n                                    iconType='lock' \r\n                                />\r\n                            </FormField>\r\n                            <FormField className='flexible' isLine>\r\n                                <Button className='cell no-margin' primary onClick={this.handleResetPasswordClick}>\r\n                                    Reset\r\n                                </Button> \r\n                            </FormField>\r\n                            <FormField isLine onClick={onSigninClick}>\r\n                                Or <View className='inline link'>Sign in!</View>\r\n                            </FormField>\r\n                        </Form>\r\n                    </Box>\r\n                </CenterContainerCard>\r\n            </>\r\n        );\r\n    }\r\n}\r\nResetPassword.defaultProps = {\r\n    onSigninClick: _.noop,\r\n    onResetPasswordClick: _.noop,\r\n};","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { redirectTo } from 'modules';\r\n\r\nimport { LoginForm } from 'components/loginforms';\r\n\r\nclass Login extends React.Component {\r\n    handleRemember = (remember) => {\r\n\r\n    }\r\n\r\n    handleLogin = (userInput) => {\r\n        const { redirectTo, onLogin } = this.props;\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const redirectUrlFromSearch = query.get('redirectUrl');\r\n        onLogin(userInput, redirectUrlFromSearch || redirectTo);\r\n    }\r\n\r\n    handleSignup = () => redirectTo(this.props.signupPath)\r\n\r\n    handleForgotPassword = () => redirectTo(this.props.forgotpasswordPath)\r\n\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <LoginForm \r\n                    onLogin={this.handleLogin}\r\n                    onRemember={this.handleRemember} \r\n                    onSignupClick={this.handleSignup}\r\n                    onForgotPasswordClick={this.handleForgotPassword}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(Login);\r\nLogin.propTypes = {\r\n    signupPath: PropTypes.string.isRequired,\r\n    forgotpasswordPath: PropTypes.string.isRequired,\r\n};\r\nLogin.defaultProps = {\r\n    onLogin: _.noop,\r\n};","\r\nexport const ON_LOGIN = 'ON_LOGIN';\r\nexport const ON_LOGIN_SUCCESS = 'ON_LOGIN_SUCCESS';\r\nexport const ON_SIGNUP = 'ON_SIGNUP';\r\nexport const ON_FORGOT_PASSWORD = 'ON_FORGOT_PASSWORD';\r\nexport const ON_FORGOT_PASSWORD_SUCCESS = 'ON_FORGOT_PASSWORD_SUCCESS';\r\nexport const ON_VERIFICATION_CODE_SUBMIT = 'ON_VERIFICATION_CODE_SUBMIT';\r\nexport const ON_RESEND_VERIFICATION_CODE = 'ON_RESEND_VERIFICATION_CODE';\r\nexport const ON_RESET_PASSWORD = 'ON_RESET_PASSWORD';\r\n","import _ from 'lodash';\r\nimport * as actionTypes from './actiontypes';\r\n\r\nexport function onLogin({ username, password }, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_LOGIN,\r\n        username,\r\n        password,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onLoginSuccess() {\r\n    return {\r\n        type: actionTypes.ON_LOGIN_SUCCESS\r\n    }\r\n}\r\n\r\nexport function onSignup(userInput, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_SIGNUP,\r\n        ...userInput,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onSignupSuccess() {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport function onForgotPassword({ useremail }, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_FORGOT_PASSWORD,\r\n        useremail,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onForgotPasswordSuccess(useremail) {\r\n    return {\r\n        type: actionTypes.ON_FORGOT_PASSWORD_SUCCESS,\r\n        useremail\r\n    }\r\n}\r\n\r\nexport function onVerificatonCodeSubmit(code, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_VERIFICATION_CODE_SUBMIT,\r\n        code,\r\n        redirectUrl,\r\n    }\r\n}\r\n\r\nexport function onResendVerificationCode(useremail) {\r\n    return {\r\n        type: actionTypes.ON_RESEND_VERIFICATION_CODE,\r\n        useremail\r\n    }\r\n}\r\n\r\nexport function onResetPassword(userInput, redirectUrl) {\r\n    return {\r\n        type: actionTypes.ON_RESET_PASSWORD,\r\n        ...userInput,\r\n        redirectUrl,\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport Login from './login';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n  \r\n    }),\r\n    (dispatch) => ({\r\n      onLogin: (userInput, redirectUrl) => dispatch(actions.onLogin(userInput, redirectUrl)),\r\n    })\r\n)(Login);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { redirectTo } from 'modules';\r\n\r\nimport { SignupForm } from 'components/loginforms';\r\n\r\nclass Signup extends React.Component {\r\n    handleSignup = (userInput) => {\r\n        const { redirectTo, onSignup } = this.props;\r\n        onSignup(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => redirectTo(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <SignupForm \r\n                    onSignup={this.handleSignup}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(Signup);\r\nSignup.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nSignup.defaultProps = {\r\n    onSignup: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport Signup from './signup';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n  \r\n    }),\r\n    (dispatch) => ({\r\n      onSignup: (userInput, redirectUrl) => dispatch(actions.onSignup(userInput, redirectUrl)),\r\n    })\r\n)(Signup);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { redirectTo } from 'modules';\r\n\r\nimport { ForgotPasswordForm } from 'components/loginforms';\r\n\r\nclass ForgotPassword extends React.Component {\r\n    handleForgotPassword = (userInput) => {\r\n        const { redirectTo, onForgotPassword } = this.props;\r\n        onForgotPassword(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => redirectTo(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <ForgotPasswordForm \r\n                    onForgotPassword={this.handleForgotPassword}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(ForgotPassword);\r\nForgotPassword.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nForgotPassword.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport ForgotPassword from './forgotpassword';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      \r\n    }),\r\n    (dispatch) => ({\r\n      onForgotPassword: (userInput, redirectUrl) => {\r\n        return dispatch(actions.onForgotPassword(userInput, redirectUrl));\r\n      },\r\n    })\r\n)(ForgotPassword);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { redirectTo } from 'modules';\r\n\r\nimport { VerificationCodeForm } from 'components/loginforms';\r\n\r\nclass VerificationCode extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.emailAddress) this.handleSignin();\r\n    }\r\n\r\n    handleVerificationCodeSubmit = (code) => {\r\n        const { redirectTo, onVerificationCodeSubmit } = this.props;\r\n        onVerificationCodeSubmit(code, redirectTo);\r\n    }\r\n\r\n    handleResendVerificationCode = () => {\r\n        const { onResendVerificationCode, emailAddress } = this.props;\r\n        onResendVerificationCode(emailAddress);\r\n    }\r\n\r\n    handleSignin = () => redirectTo(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <VerificationCodeForm \r\n                    emailAddress={this.props.emailAddress}\r\n                    onResendVerificationCode={this.handleResendVerificationCode}\r\n                    onSubmitVerificationCode={this.handleVerificationCodeSubmit}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(VerificationCode);\r\n\r\nVerificationCode.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n    emailAddress: PropTypes.string.isRequired,\r\n};\r\nVerificationCode.defaultProps = {\r\n    onForgotPassword: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport Verification from './verification';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      emailAddress: state.userManagement.resetPasswordForUserEmail,\r\n    }),\r\n    (dispatch) => ({\r\n      onResendVerificationCode: (emailAddress) => {\r\n        return dispatch(actions.onResendVerificationCode(emailAddress));\r\n      },\r\n      onVerificationCodeSubmit: (code, redirectUrl) => {\r\n        return dispatch(actions.onVerificatonCodeSubmit(code, redirectUrl));\r\n      },\r\n    })\r\n)(Verification);\r\n  ","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport { redirectTo } from 'modules';\r\n\r\nimport { ResetPasswordForm } from 'components/loginforms';\r\n\r\nclass ResetPassword extends React.Component {\r\n    handleResetPassword = (userInput) => {\r\n        const { redirectTo, onResetPassword } = this.props;\r\n        onResetPassword(userInput, redirectTo);\r\n    }\r\n\r\n    handleSignin = () => redirectTo(this.props.signinPath)\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <ResetPasswordForm \r\n                    onResetPasswordClick={this.handleResetPassword}\r\n                    onSigninClick={this.handleSignin}\r\n                />\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);\r\n\r\nResetPassword.propTypes = {\r\n    signinPath: PropTypes.string.isRequired,\r\n};\r\nResetPassword.defaultProps = {\r\n    onResetPassword: _.noop,\r\n};","import { connect } from 'react-redux'\r\nimport ResetPassword from './resetpassword';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n        onResetPassword: (userInput, redirectUrl) => {\r\n            return dispatch(actions.onResetPassword(userInput, redirectUrl));\r\n        },\r\n    })\r\n)(ResetPassword);\r\n  ","import React from 'react';\r\n\r\nexport default class Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { Sidebar } from \"blocks\";\r\nimport \"styles/sidebar.scss\";\r\n\r\nexport default class SidebarComponent extends React.Component {\r\n  render() {\r\n    const { menuItems, logo, onItemClick = _.noop } = this.props;\r\n\r\n    return (\r\n      <Sidebar logo={logo} menuItems={menuItems} onItemClick={onItemClick} />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Sidebar from 'components/sidebar';\r\nimport { AppBody, Divider, Header } from 'blocks';\r\nimport { redirectTo } from 'modules';\r\n\r\nconst logo = { src: \"https://react.semantic-ui.com/logo.png\" };\r\n\r\nexport class MainApp extends React.Component {\r\n    handleMenuClick = item => {\r\n        if (item.route) {\r\n            redirectTo(item.route);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const menuItems = [{\r\n              label: \"Dashboard\", icon: \"dashboard\", route: \"/dashboard\",\r\n            }, {\r\n              label: \"Links\", icon: \"linkify\", route: \"/links\",\r\n            }, {\r\n              label: \"Overlays\", icon: \"affiliatetheme\", route: \"/overlays\",\r\n            }, {\r\n              bottom: true, label: \"Profile\", icon: \"user outline\", route: \"/user-profile\",\r\n            }, {\r\n              bottom: true, label: \"Signout\", icon: \"power off\", route: \"/logout\",\r\n        }];\r\n\r\n        const routeLabels = [\r\n          { label: \"Dashboard\", route: \"/dashboard\" },\r\n          { label: \"Links\", route: \"/links\" },\r\n          { label: \"Overlays\", route: \"/overlays\" },\r\n          { label: \"New Overlay\", route: \"/overlays/new\" },\r\n          { label: \"Profile\", route: \"/user-profile\" },\r\n        ];\r\n\r\n        const loadedRouteComponent = _.find(menuItems, ({ route }) => _.startsWith(match.path, route));\r\n        if (loadedRouteComponent) {\r\n          loadedRouteComponent.active = true;\r\n        }\r\n\r\n        const routeLabel = _.find(routeLabels, { route: match.path });\r\n        return (\r\n            <>\r\n                <Sidebar logo={logo} menuItems={menuItems} onItemClick={this.handleMenuClick} />\r\n                <AppBody>\r\n                  {routeLabel && (\r\n                    <>\r\n                      <Header as='h2'>{routeLabel.label}</Header>\r\n                      <Divider />\r\n                    </>\r\n                  )}\r\n                  {this.props.children}\r\n                </AppBody>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(MainApp);\r\n","import { connect } from 'react-redux'\r\nimport Mainbody from './mainbody';\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n    })\r\n)(Mainbody);\r\n  ","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport MainBody from 'modules/mainbody';\r\n\r\nexport class PrivateRoute extends React.Component {\r\n    state = {\r\n      isAuthenticated: false, \r\n    };\r\n\r\n    componentDidMount() {\r\n      const { path, isAuthenticated, onRedirectToLogin } = this.props;\r\n      if (!isAuthenticated) {\r\n        onRedirectToLogin(path);\r\n      }\r\n    }\r\n\r\n    getIsAuthenticated = () => {\r\n      return true;\r\n    }\r\n\r\n    render() {\r\n      const { isAuthenticated, children, ...rest } = this.props;\r\n\r\n      if (!isAuthenticated) return null;\r\n      return (\r\n          <Route {...rest}>\r\n            <MainBody>\r\n              {children}\r\n            </MainBody>\r\n          </Route>\r\n      );\r\n    }\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  onGetAuthenticated: PropTypes.bool,\r\n};\r\n\r\nPrivateRoute.defaultProps = {\r\n  onRedirectToLogin: _.noop,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { PrivateRoute } from './privateroute';\r\nimport { redirectTo } from 'modules';\r\n\r\nexport default connect(\r\n  state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }),\r\n  dispatch => ({\r\n    onRedirectToLogin: (redirectBackTo) => redirectTo(`/login?redirectUrl=${redirectBackTo}`)\r\n  })\r\n)(PrivateRoute);","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { createHashHistory } from 'history';\r\n\r\nimport { \r\n  Login, Signup, ForgotPassword, Verification, Dashboard, ResetPassword ,\r\n  OverlaysList, LinksList, CreateOverlay\r\n} from 'modules';\r\n\r\nimport PrivateRoute from './index';\r\n\r\nconst history = createHashHistory();\r\n\r\nexport function redirectTo(url) {\r\n  return history.push(url);\r\n}\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/overlays\" />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login redirectTo='/dashboard' signupPath='/signup' forgotpasswordPath='/forgot-password' />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup redirectTo='/dashboard' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/forgot-password\">\r\n            <ForgotPassword redirectTo='/verification' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/verification\">\r\n            <Verification redirectTo='/reset-password' signinPath='/login' />\r\n          </Route>\r\n          <Route exact path=\"/reset-password\">\r\n            <ResetPassword redirectTo='/login' signinPath='/login' />\r\n          </Route>\r\n          <PrivateRoute exact path='/dashboard'>\r\n              <Dashboard />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/links'>\r\n              <LinksList />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/overlays'>\r\n              <OverlaysList newOverlayPath='/overlays/new' />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/overlays/new'>\r\n              <CreateOverlay />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/user-profile'>\r\n              <LinksList />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/logout'>\r\n              <LinksList />\r\n          </PrivateRoute>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { Table, View, Button, Icon } from 'blocks';\r\nimport 'styles/overlays.scss';\r\n\r\nclass OverlaysList extends React.Component {\r\n    handleOnAddOverlays = e => {\r\n        this.props.onAddOverlay();\r\n    }\r\n\r\n    getFooterActions() {\r\n        return (\r\n            <Button\r\n                floated='right'\r\n                icon\r\n                labelPosition='left'\r\n                primary\r\n                size='small'\r\n                onClick={this.handleOnAddOverlays}\r\n            >\r\n                <Icon name='affiliatetheme' /> Add Overlay\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const { cols, data } = this.props;\r\n        return (\r\n            <>\r\n                <View className='overlays'>\r\n                        <Table cols={cols} data={data} footerActions={this.getFooterActions()} />\r\n                </View>\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default OverlaysList;\r\n\r\nOverlaysList.propTypes = {\r\n    cols: PropTypes.array,\r\n    data: PropTypes.array,\r\n    onAddOverlay: PropTypes.func.isRequired,\r\n};\r\n\r\nOverlaysList.defaultProps = {\r\n    cols: [],\r\n    data: []\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { OverlaysList } from 'components/overlayslist';\r\nimport { redirectTo } from 'modules';\r\n\r\nexport default class Overlays extends React.Component {\r\n    cols = [{ \r\n        align: 'left', label: 'Title', valueField: 'id', labelField: 'name' \r\n    }, { \r\n        align: 'center', label: 'Created on', valueField: 'id', labelField: 'createdOn' \r\n    }, { \r\n        align: 'right', label: 'Preview', icon: 'eye', valueField: 'id' \r\n    }, { \r\n        align: 'right', label: 'Edit', icon: 'edit', valueField: 'id', color: 'grey'\r\n    }, { \r\n        align: 'right', label: 'Duplicate', icon: 'copy', valueField: 'id', color: 'blue'\r\n    }, { \r\n        align: 'right', label: 'Delete', icon: 'delete', valueField: 'id', color: 'red'\r\n    }];\r\n\r\n    handleOnAddOverlays = () => {\r\n        redirectTo(this.props.newOverlayPath)\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOverlays();\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <>\r\n               <OverlaysList cols={this.cols} data={data} onAddOverlay={this.handleOnAddOverlays} /> \r\n            </>\r\n        );\r\n    }\r\n}\r\nOverlays.propTypes = {\r\n    newOverlayPath: PropTypes.string.isRequired,\r\n}","export const FETCH_OVERLAYS = 'FETCH_OVERLAYS';\r\nexport const ON_FETCH_OVERLAYS_SUCCESS = 'ON_FETCH_OVERLAYS_SUCCESS';\r\n","import { connect } from 'react-redux';\r\nimport Overlays from './overlays';\r\nimport * as actions from './actions';\r\n\r\nexport default connect(\r\n    state => ({\r\n        data: state.overlays.data,\r\n    }),\r\n    (dispatch) => ({\r\n      onFetchOverlays: e => dispatch(actions.onFetchOverlays()),\r\n    })\r\n)(Overlays);","import * as actionTypes from './actiontypes';\r\n\r\nexport function onFetchOverlays() {\r\n    return {\r\n        type: actionTypes.FETCH_OVERLAYS\r\n    }\r\n}\r\n\r\nexport function onFetchOverlaysSuccess(data) {\r\n    return {\r\n        type: actionTypes.ON_FETCH_OVERLAYS_SUCCESS,\r\n        data,\r\n    }\r\n}\r\n\r\nexport function selectedPropertyValue(property, value) {\r\n    \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Step } from 'blocks';\r\n\r\nexport default class CreateOverlays extends React.Component {\r\n    render() {\r\n        const { steps } = this.props;\r\n        return (\r\n            <Step steps={steps} />\r\n        );\r\n    }\r\n}\r\n\r\nCreateOverlays.propTypes = {\r\n    stepsStatus: PropTypes.object,\r\n    steps: PropTypes.array,\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\nimport CreateOverlays from 'components/createoverlays'\r\n\r\nconst stepsConfig = [{\r\n    key: 'overlayType',\r\n    icon: 'affiliatetheme',\r\n    title: 'Overlay Type',\r\n    active: true,\r\n    description: 'Positioning and size',\r\n},\r\n{\r\n    key: 'overlayCategory',\r\n    icon: 'dot circle',\r\n    disabled: true, \r\n    title: 'Overlay Category',\r\n    description: 'Action on overlay',\r\n},\r\n{ \r\n    key: 'overlayTemplate', \r\n    icon: 'wrench',\r\n    disabled: true, \r\n    title: 'Template',\r\n    description: 'Elements and their positions on overlay' \r\n},\r\n{ \r\n    key: 'overlayName', \r\n    icon: 'tag',\r\n    disabled: true, \r\n    title: 'Name',\r\n    description: 'So that system can identify' \r\n}];\r\n\r\nexport default class CreateOverlay extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            steps: [...stepsConfig],\r\n        };\r\n    }\r\n\r\n    getSteps() {\r\n        const { stepsStatus } = this.props;\r\n        const { steps } = this.state;\r\n        return steps.map(s => {\r\n            const newStep = _.assign({...s}, stepsStatus[s.key]);\r\n            return newStep;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='new-overlay'>\r\n                <CreateOverlays steps={this.getSteps()} />\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport CreateOverlay from './overlaycreate';\r\nimport * as actions from '../actions';\r\n\r\nexport default connect(\r\n    state => ({\r\n        stepsStatus: state.overlays.createOverlay,\r\n    }),\r\n    (dispatch) => ({\r\n        onSelection: (property, value) => dispatch(actions.selectedPropertyValue(property, value)) \r\n    })\r\n)(CreateOverlay);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport { Table, View, Button, Icon } from 'blocks';\r\nimport 'styles/links.scss';\r\n\r\nclass LinksList extends React.Component {\r\n    getFooterActions() {\r\n        return (\r\n            <Button\r\n                floated='right'\r\n                icon\r\n                labelPosition='left'\r\n                primary\r\n                size='small'\r\n            >\r\n                <Icon name='linkify' /> Add New Link\r\n            </Button>\r\n        )\r\n    }\r\n    render () {\r\n        const { cols, data } = this.props;\r\n        return (\r\n            <>\r\n                <View className='links'>\r\n                        <Table \r\n                            cols={cols} \r\n                            data={data} \r\n                            footerActions={this.getFooterActions()}\r\n                            noRecordsLabel=\"No Links found\" \r\n                        />\r\n                </View>\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default LinksList;\r\n\r\nLinksList.propTypes = {\r\n    cols: PropTypes.array,\r\n    data: PropTypes.array,\r\n};\r\n\r\nLinksList.defaultProps = {\r\n    cols: [],\r\n    data: []\r\n};","import React from 'react';\r\nimport _ from 'lodash';\r\nimport LinksList from 'components/links';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nexport default class Links extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.cols = [{ \r\n            align: 'left', \r\n            label: 'Short URL', \r\n            labelField: 'shortUrl',\r\n            width: 3,\r\n            valueField: 'id', \r\n            icons: [\r\n                {\r\n                    icon: 'copy', \r\n                    color: 'grey' ,\r\n                    onClick: this.onCopy\r\n                }, {\r\n                    icon: 'external alternate',\r\n                    color: 'grey',\r\n                    link: {\r\n                        hrefField: 'shortUrl', \r\n                        target: '_blank',\r\n                    },\r\n                }\r\n            ],\r\n        }, { \r\n            align: 'left', label: 'Overlay used', valueField: 'id', labelField: 'overlayName', width: 5,\r\n        }, { \r\n            align: 'left', label: 'Created On', valueField: 'id', labelField: 'createdOn'\r\n        }, { \r\n            align: 'left', \r\n            label: 'Target URL', \r\n            valueField: 'id', \r\n            labelField: 'targetUrl', \r\n            renderer: this.renderTargetUrl,\r\n        }, { \r\n            align: 'right', \r\n            label: 'Actions', \r\n            valueField: 'id',\r\n            icons: [\r\n                {\r\n                    icon: 'edit', \r\n                    color: 'grey',\r\n                },\r\n                {\r\n                    icon: 'delete', \r\n                    color: 'red',\r\n                }\r\n            ]\r\n        }];\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.onFetchLinks();\r\n    }\r\n\r\n    onCopy = (col, rowData) => {\r\n\r\n    };\r\n\r\n    renderTargetUrl = (col, rowData) => {\r\n        return (\r\n            <div className='text'>\r\n                <a href={col.label} target='_blank'>{col.label}</a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        return (\r\n            <>\r\n               <LinksList cols={this.cols} data={data} /> \r\n            </>\r\n        );\r\n    }\r\n}","export const FETCH_LINKS = 'FETCH_LINKS';\r\nexport const ON_FETCH_LINKS_SUCCESS = 'ON_FETCH_LINKS_SUCCESS';\r\n","import { connect } from 'react-redux';\r\nimport Links from './links';\r\nimport * as actions from './actions';\r\n\r\nexport default connect(\r\n    state => ({\r\n        data: state.links.data,\r\n    }),\r\n    (dispatch) => ({\r\n        onFetchLinks: e => dispatch(actions.onFetchLinks()),\r\n    })\r\n)(Links);","import * as actionTypes from './actiontypes';\r\n\r\nexport function onFetchLinks() {\r\n    return {\r\n        type: actionTypes.FETCH_LINKS\r\n    }\r\n}\r\n\r\nexport function onFetchLinksSuccess(data) {\r\n    return {\r\n        type: actionTypes.ON_FETCH_LINKS_SUCCESS,\r\n        data,\r\n    }\r\n}","export const ON_AUTHENTICATION_SUCCESS = 'ON_AUTHENTICATION_SUCCESS';","import _ from 'lodash';\r\nimport * as actiontypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    token: ''\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actiontypes.ON_AUTHENTICATION_SUCCESS:\r\n            return {\r\n                isAuthenticated: true,\r\n                token: 'xyz',\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import _ from 'lodash';\r\nimport * as actiontypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    resetPasswordForUserEmail: '',\r\n};\r\n\r\nexport default function userManagement(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actiontypes.ON_FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                resetPasswordForUserEmail: action.useremail,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import _ from 'lodash';\r\nimport * as actiontypes from './actiontypes';\r\n\r\nconst initOverLay = {\r\n    overlayType: {\r\n        completed: false,\r\n        disabled: false,\r\n    },\r\n    overlayCategory: {\r\n        completed: false,\r\n        disabled: true,\r\n    },\r\n    overlayTemplate: {\r\n        completed: false,\r\n        disabled: true,\r\n    },\r\n    overlayName: {\r\n        completed: false,\r\n        disabled: true,\r\n    }\r\n};\r\nconst initialState = {\r\n    data: [],\r\n    createOverlay: {...initOverLay},\r\n};\r\n\r\nexport default function overlay(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actiontypes.ON_FETCH_OVERLAYS_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import _ from 'lodash';\r\nimport * as actiontypes from './actiontypes';\r\n\r\nconst initialState = {\r\n    data: [],\r\n};\r\n\r\nexport default function links(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actiontypes.ON_FETCH_LINKS_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport auth from 'modules/router/reducer';\r\nimport userManagement from 'modules/login/reducer';\r\nimport overlays from 'modules/overlays/reducer';\r\nimport links from 'modules/links/reducer';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  userManagement,\r\n  overlays,\r\n  links,\r\n})","import { takeLatest, put } from 'redux-tale/es/effects';\r\nimport * as redirectActions from 'modules';\r\nimport * as authActions from 'modules/router/actions';\r\nimport * as actionTypes from './actiontypes';\r\nimport * as actions from './actions';\r\nimport { showToast } from 'utils/ui';\r\n\r\nfunction* onLogin({ username, password, redirectUrl }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(authActions.onLoginSuccess());\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onSignup({ redirectUrl, ...userInputs }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield onLogin({ ...userInputs, redirectUrl });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onForgotPassword({ redirectUrl, useremail }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(actions.onForgotPasswordSuccess(useremail));\r\n        showToast(`A Verification code has been sent to ${useremail}.`, 'success');\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onResendVerificationCode({ useremail }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        showToast(`Verification code resent to ${useremail}`, 'success');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onVerificationCodeSubmit({ code, redirectUrl }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* onResetPassword({ redirectUrl, ...userInputs }) {\r\n    try {\r\n        yield Promise.resolve(true);\r\n        // yield put(authActions.onResetPasswordSuccess());\r\n        yield put(redirectActions.redirectTo(redirectUrl));\r\n        showToast(`Your password has been changed successfully.`, 'success');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst onLoginSaga = takeLatest(actionTypes.ON_LOGIN, onLogin);\r\nconst onSignupSaga = takeLatest(actionTypes.ON_SIGNUP, onSignup);\r\nconst onForgotPasswordSaga = takeLatest(actionTypes.ON_FORGOT_PASSWORD, onForgotPassword);\r\nconst onResendVerificationCodeSaga = takeLatest(actionTypes.ON_RESEND_VERIFICATION_CODE, onResendVerificationCode);\r\nconst onVerificationCodeSubmitSaga = takeLatest(actionTypes.ON_VERIFICATION_CODE_SUBMIT, onVerificationCodeSubmit);\r\nconst onResetPasswordSaga = takeLatest(actionTypes.ON_RESET_PASSWORD, onResetPassword);\r\n\r\nexport default [\r\n    onLoginSaga,\r\n    onSignupSaga,\r\n    onForgotPasswordSaga,\r\n    onResendVerificationCodeSaga,\r\n    onVerificationCodeSubmitSaga,\r\n    onResetPasswordSaga\r\n];","import * as actionTypes from './actiontypes';\r\n\r\nexport function onLoginSuccess() {\r\n    return {\r\n        type: actionTypes.ON_AUTHENTICATION_SUCCESS\r\n    }\r\n}","import { takeLatest, put } from 'redux-tale/es/effects';\r\nimport * as actionTypes from './actiontypes';\r\nimport * as actions from './actions';\r\nimport { showToast } from 'utils/ui';\r\n\r\n\r\nconst serverData = [\r\n    { id: 1, name: 'Mineral water', createdOn: '12/30/2019 09:57 AM' },\r\n    { id: 1, name: 'Cadbury', createdOn: '12/30/2019 09:57 AM' },\r\n    { id: 1, name: 'Save water campaign', createdOn: '01/04/2019 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n    { id: 1, name: 'Try', createdOn: '1/30/2020 09:57 AM' },\r\n];\r\n\r\nfunction* onFetchOverlays() {\r\n    try {\r\n        const result = yield Promise.resolve(serverData);\r\n        yield put(actions.onFetchOverlaysSuccess(result));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst onFetchOverlaysSaga = takeLatest(actionTypes.FETCH_OVERLAYS, onFetchOverlays);\r\n\r\nexport default [\r\n    onFetchOverlaysSaga,\r\n];","import { takeLatest, put } from 'redux-tale/es/effects';\r\nimport * as actionTypes from './actiontypes';\r\nimport * as actions from './actions';\r\nimport { showToast } from 'utils/ui';\r\n\r\n\r\nconst serverData = [\r\n    { \r\n        id: 1, \r\n        shortUrl: 'http://utv.com/v/sduh44hhuysq', \r\n        targetUrl: 'https://google.com', \r\n        overlayName: 'Commercials mineral water', \r\n        createdOn: '12/30/2019 09:57 AM' \r\n    },\r\n    { \r\n        id: 2, \r\n        shortUrl: 'http://utv.com/v/tfiugfuygu54', \r\n        targetUrl: 'https://google.com', \r\n        overlayName: 'Commercials chocolates', \r\n        createdOn: '11/02/2019 09:57 AM' \r\n    },\r\n    { \r\n        id: 3, \r\n        shortUrl: 'http://utv.com/v/kopo678776fl', \r\n        targetUrl: 'https://codeacademy.com/learn-to-code-fast', \r\n        overlayName: 'Learn coding in 300 minutes', \r\n        createdOn: '8/9/2018 09:57 AM' \r\n    },\r\n    { \r\n        id: 4, \r\n        shortUrl: 'http://utv.com/v/pkpkpmsd35ds', \r\n        targetUrl: 'https://wp.com/bloggingweb/abc/create-to-experience', \r\n        overlayName: 'Donate for a cause', \r\n        createdOn: '3/30/2018 09:57 AM' \r\n    },\r\n    \r\n];\r\n\r\nfunction* onFetchLinks() {\r\n    try {\r\n        const result = yield Promise.resolve(serverData);\r\n        yield put(actions.onFetchLinksSuccess(result));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst onFetchLinksSaga = takeLatest(actionTypes.FETCH_LINKS, onFetchLinks);\r\n\r\nexport default [\r\n    onFetchLinksSaga,\r\n];","import createTaleMiddleware from 'redux-tale/es/';\r\n\r\nimport loginSagas from 'modules/login/saga';\r\nimport overlaysSagas from 'modules/overlays/saga';\r\nimport linksSagas from 'modules/links/saga';\r\n\r\nlet sagaMiddleware;\r\n\r\nconst sagas = [\r\n    ...loginSagas,\r\n    ...overlaysSagas,\r\n    ...linksSagas,\r\n];\r\n\r\nexport function createSagaMiddleWare() {\r\n    sagaMiddleware = createTaleMiddleware();\r\n    return sagaMiddleware;\r\n}\r\n\r\nexport function runSagas() {\r\n    sagas.map(saga => sagaMiddleware.run(saga));\r\n}","import React from 'react';\r\nimport { Routes } from 'modules';\r\nimport { Provider } from 'react-redux';\r\nimport initStore from './store.js';\r\n\r\nconst store = initStore();\r\n\r\nfunction App() {\r\n  return (\r\n      <Provider store={store}>\r\n        <Routes />\r\n      </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport combinedReducers from './reducers';\r\nimport { createSagaMiddleWare, runSagas } from './sagas';\r\nimport { loadStateToken, saveStateToken} from 'utils/helper';\r\n\r\nexport default function initStore() {\r\n    const store = createStore(\r\n        combinedReducers,\r\n        loadStateToken(),\r\n        compose(\r\n            applyMiddleware(createSagaMiddleWare())\r\n        )\r\n    );\r\n    store.subscribe(() => saveStateToken(store.getState()));\r\n    runSagas();\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'app';\r\nimport 'styles/index.scss';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}